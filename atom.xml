<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
  <title>Andrew Buckingham</title>
  <link href="andrewbuckingham.net/blog/"/>
  <link type="application/atom+xml" rel="self" href="http://andrewbuckingham.net/atom.xml"/>
  <updated>2015-08-08T09:56:32-07:00</updated>
  <id>http://andrewbuckingham.net/blog</id>
  <author>
    <name>Andrew Buckingham</name>
    <email>abuckingham99@gmail.com</email>
  </author>

  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2015/07/17/kcruby-emacs-demo</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2015/07/17/kcruby-emacs-demo"/>
    <title>KCRuby Emacs Demo</title>
    <updated>2015-07-17T13:15:46-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;If you haven’t checked out &lt;a href=&quot;http://meetup.com&quot;&gt;meetup.com&lt;/a&gt;, you could be missing out on a great way to network and meet other people who share your interests. I’ve been going to local Ruby and Rails meetups since last year, and I’ve always enjoyed meeting people, and learning new things. The other day, one of the leaders of the KCRuby group asked me to give a demo of Emacs. As it turns out, I didn’t have time to give a talk, but had already made an outline, in &lt;a href=&quot;http://orgmode.org&quot;&gt;org-mode&lt;/a&gt;, so I shared it with them afterwards. In case it’s useful to anyone else, here it is. Even if you don’t use Emacs, there might be something useful for you. For example, I also referenced useful plugins for Vim and Sublime Text.&lt;/p&gt;

&lt;!-- more --&gt;
&lt;p&gt;The plan was to present it, in outline form, from within Emacs. Here’s a more browser-friendly version:&lt;/p&gt;

&lt;p&gt;true&lt;script src=&quot;https://gist.github.com/c6db4191efb11fdb115d.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Here’s a link to the actual file: &lt;a href=&quot;https://github.com/XiaoA/kc_ruby_emacs_demo&quot;&gt;https://github.com/XiaoA/kc_ruby_emacs_demo&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2015/07/13/A-Simple-Way-to-Implement-Case-Insensitive-Searches-in-Rails</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2015/07/13/A-Simple-Way-to-Implement-Case-Insensitive-Searches-in-Rails"/>
    <title>A Simple Way to Implement Case-Insensitive Searches in Rails</title>
    <updated>2015-07-13T18:08:47-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;In my current project for the &lt;a href=&quot;http://www.gotealeaf.com/curriculum#!production-apps&quot;&gt;final Rails course&lt;/a&gt; at &lt;a href=&quot;gotealeaf.com&quot;&gt;Tealeaf Academy&lt;/a&gt;, I’m creating ‘MyFlix,’ a clone of Netflix, built with Ruby, instead of Java. I just added functionality to search for a video by title, but it was case-sensitive, so a search for &lt;code&gt;monk&lt;/code&gt; returned an empty array, but a search for &lt;code&gt;Monk&lt;/code&gt; returned the proper result. I wasn’t satisfied with that, so I decided to implement case-insensitive searches. Fortunately, it’s really easy in Postgresql. Here’s how I did it…&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;a-look-at-oracle-sql&quot;&gt;A Look at Oracle SQL&lt;/h2&gt;
&lt;p&gt;I’ve used various flavors of SQL, including MS Access, MySQL, Oracle, and Postgresql. They all share a common language, but each implementation has its own unique features and quirks. As a Blackboard Administrator, I’ve been accessing an Oracle database everyday, so I’m pretty comfortable with it. My favorite unique Oracle operator is &lt;code&gt;regexp_like&lt;/code&gt;. Here’s a simple example of how you could use it to find all Blackboard course sites from Summer Semester 2015 (with ‘SS2015’ in the Course ID):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;course_main&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;regexp_like&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;course_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;SS2015&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You’ll receive a list of all records with ‘SS2015’ anywhere in the &lt;code&gt;course_id&lt;/code&gt; field. A more generic SQL query would be:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;course_main&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;course_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;%SS2015%&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The advantage of using &lt;code&gt;regexp_like&lt;/code&gt; in Oracle SQL is that feels a bit easier to type. Plus, it’s easy to create more granular searches. For example, it’s trivial to make your search case-insensitive, by adding an ‘i’ argument after the search terms:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;regexp_like&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;and&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In this case, you’d get a list of first names that included, for example, both ‘Andrew’ and ‘Brandi.’ But how does case-insensitive search work in Postgresql?&lt;/p&gt;

&lt;h2 id=&quot;searching-for-videos-by-title-in-postgresql&quot;&gt;Searching for Videos by Title in Postgresql&lt;/h2&gt;

&lt;p&gt;Like any video site, MyFlix needs an easy way for users to search for the video they’d like to watch. Here is the original version, without case-insenstive search:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Video&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:category&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;validates_presence_of&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:description&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;search_by_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search_term&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search_term&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blank?&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;title LIKE ?&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search_term&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;created_at DESC&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I wasn’t sure how I could implement a case-insensitive search. I figured I’d need work out some regex. But thanks to this blog post: &lt;a href=&quot;http://robb.weblaws.org/2013/12/05/yes-rails-supports-case-insensitive-database-queries/&quot;&gt;http://robb.weblaws.org/2013/12/05/yes-rails-supports-case-insensitive-database-queries/&lt;/a&gt;, I learned about Postgresql’s &lt;code&gt;ILIKE&lt;/code&gt; operator. It’s so simple, and yet powerful! With one change, from the &lt;code&gt;LIKE&lt;/code&gt; operator to the &lt;code&gt;ILIKE&lt;/code&gt; operator (compare line 8), you are no longer restricted to case-sensitive searches.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Video&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:category&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;validates_presence_of&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:description&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;search_by_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search_term&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search_term&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blank?&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;title ILIKE ?&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search_term&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;created_at DESC&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here’s the Postgresql API documentation for functions matching: &lt;a href=&quot;http://www.postgresql.org/docs/8.3/static/functions-matching.html&quot;&gt;http://www.postgresql.org/docs/8.3/static/functions-matching.html&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2015/06/20/Positit!</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2015/06/20/Positit!"/>
    <title>Positit!</title>
    <updated>2015-06-20T05:37:51-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;The second course at &lt;a href=&quot;http://gotealeaf.com&quot;&gt;Tealeaf&lt;/a&gt; delved into Ruby on Rails development, from the ground up. Most tutorials and guides that I’ve seen include either scaffolding, or at least using generators, as shortcuts for building apps, (not to mention, lots of gems). There’s nothing wrong with using shortcuts, but we built &lt;em&gt;everything&lt;/em&gt; ourselves, because it helps us learn how Rails works. The only generators we used were for migrations, but we still wrote the migation files.&lt;/p&gt;

&lt;div class=&quot;embed-container&quot;&gt;&lt;iframe src=&quot;https://www.flickr.com/photos/abuckingham/18995889655/in/dateposted/player/&quot; width=&quot;800&quot; height=&quot;436&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; oallowfullscreen=&quot;&quot; msallowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;!-- more --&gt;

&lt;p&gt;For example, this terminal command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; 小A曰: rails g migration CreateUsers&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Produces this file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CreateUsers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:users&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Creating the table is simply a matter of declaring the data type (for example, string or integer), and the row names (lines 4 and 5):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CreateUsers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:users&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:phone_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:password_digest&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timestamps&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;7&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The main project for the second course was “Postit”, a Reddit-style application. While the app itself has a simple and clean UI, it has a fair amount of complexity under the hood.&lt;/p&gt;

&lt;p&gt;I learned several fundamental aspects of Rails development, by incorporating the following features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ruby 2 and Rails 4&lt;/li&gt;
  &lt;li&gt;Model-backed forms&lt;/li&gt;
  &lt;li&gt;Using Ajax to vote&lt;/li&gt;
  &lt;li&gt;URL Slugs&lt;/li&gt;
  &lt;li&gt;Authentication&lt;/li&gt;
  &lt;li&gt;Custom time zone display&lt;/li&gt;
  &lt;li&gt;Admin roles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also produced a static &lt;a href=&quot;https://limitless-badlands-3722.herokuapp.com/about&quot;&gt;‘About’ page&lt;/a&gt;, and I implemented two-factor authentication, using the &lt;a href=&quot;https://www.twilio.com/docs/api&quot;&gt;TWilio API&lt;/a&gt;. However, I have not yet pushed the two-factor authentication into production yet, because I wanted to learn more about how to protect my API key and account information. I experimented with the &lt;a href=&quot;https://github.com/laserlemon/figaro&quot;&gt;Figaro gem&lt;/a&gt;, but this will be a major part of the third, and final course of the program, so I will revisit that soon.&lt;/p&gt;

&lt;p&gt;Please feel free to create a user account, and share a link or comment, and vote on other posts and comments. &lt;/p&gt;

&lt;h2 id=&quot;take-postit-for-a-spin&quot;&gt;Take Postit! for a Spin&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Here’s a link to the code: &lt;a href=&quot;https://github.com/XiaoA/post-it&quot;&gt;https://github.com/XiaoA/post-it&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Here’s a link to the working app: &lt;a href=&quot;https://limitless-badlands-3722.herokuapp.com&quot;&gt;https://limitless-badlands-3722.herokuapp.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2015/05/12/Notes-from-my-Hard-Drive-Failure</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2015/05/12/Notes-from-my-Hard-Drive-Failure"/>
    <title>Notes from my Hard Drive Failure</title>
    <updated>2015-05-12T12:05:38-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;Last month, my failing hard drive took up a lot of my attention, but I still managed to keep working, and I made progress on my Rails project, as well. I’ve written a few drafts over the last few weeks, but I honestly think they can can be combined into one simple post. (I’m pretty anxious to talk about what I’m doing now, rather than my issues from last month!) Still, there are a few things I learned, and a couple tips that might be useful for others, so I’ll condense it down to one post.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h3 id=&quot;signs-of-impending-doom&quot;&gt;Signs Of Impending Doom&lt;/h3&gt;

&lt;p&gt;One day, all of my browser tabs crashed, while I was watching a YouTube video. it seemed like a corruption with Flash, so I removed Flash, and reinstalled it. That seemed to work for a couple of days,  that I started getting the “spinning pizza wheel” that Macs get when they are having problems processing something. I didn’t want to update to OS X Yosemite until after I had finished the Tealeaf program but I figured a clean install might help resolve whatever issue is going on. OS X comes with Time Machine, which seems like a really easy and effective way to keep your system backed up, but I’ve never used it. I’ve been using &lt;a href=&quot;http://www.shirt-pocket.com/SuperDuper/SuperDuperDescription.html&quot;&gt;SuperDuper!&lt;/a&gt; to clone my Macs for years. I used to run it nightly, but these days, most of my user files are symlinked to &lt;a href=&quot;https://www.dropbox.com&quot;&gt;Dropbox&lt;/a&gt; or &lt;a href=&quot;https://hubic.com/en/&quot;&gt;Hubic&lt;/a&gt;, so I run backups a bit less often. I did a full backup, a couple nights in a row, and it failed both times. So, because you can never be too paranoid, I backed up all of the user files and system files that I thought that I would need. Then I did a clean install and upgraded to the newest OS X operating system. &lt;/p&gt;

&lt;h3 id=&quot;thoughts-on-os-x-yosemite&quot;&gt;Thoughts on OS X Yosemite&lt;/h3&gt;
&lt;p&gt;Whenever a new release of OSX comes out, I always read &lt;a href=&quot;http://arstechnica.com/author/john-siracusa/&quot;&gt;John Siracusa’s reviews of the latest version&lt;/a&gt; for Ars Technica&lt;sup id=&quot;fnref:siracusa&quot;&gt;&lt;a href=&quot;#fn:siracusa&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. I knew there were some good features, but I wasn’t sure how I felt about the new, flatter UI. As it turns out, I really like it, and I wouldn’t want to go back to Mavericks. The integration with my iPhone is better than ever, and everything runs really smoothly (now). After I’d installed Yosemite, things seemed to be working. Once again, I thought that I had resolved the issue. but the frequency of the spinning wheel started to increase. Now I knew I had a problem.  Last year, my SATA cable came loose. I wasn’t sure if that might be the case, or if I might have a problem with the logic board or hard drive. Unfortunately, my AppleCare warranty had already expired.&lt;/p&gt;

&lt;h3 id=&quot;hard-drive-sata-cable-logic-board-or&quot;&gt;Hard drive, SATA cable, Logic Board, or…?&lt;/h3&gt;
&lt;p&gt;I’ve been a big fan of &lt;a href=&quot;https://www.smartmontools.org&quot;&gt;Smartmontools&lt;/a&gt; for a long time. After using the built-in Disk Utility to repair permissions, check the drive, and do a basic S.M.A.R.T. check, I fired up Smartcl (the main tool in Smartmontool), and it said the disk was passing. But I could clearly tell from the OSX console, that the drive had errors. Fortunately, I heard about a unique tool for Mac, Scannerz.&lt;/p&gt;

&lt;h3 id=&quot;enter-scannerz&quot;&gt;Enter Scannerz&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://scsc-online.com/index.html&quot;&gt;Scannerz&lt;/a&gt; is a set of four utilities that can help you determine exactly what is wrong with your computer. Most tools, including Smartmontools, only check the hard drive for errors. With Scannerz, you can check not only the entire drive, but it can also help isolate issues with cables and logic boards. When I bought it, there was a strange issue with the file, and I couldn’t download it. It was late at night, so I sent an email, and was getting ready for bed, when I got a reply back, explaining that there had been a server issue, which was resolved. Then, the owner of the company emailed me with a lengthy set of tips on how to interpret the data. This was late at night. I was very impressed with the service.&lt;/p&gt;

&lt;p&gt;Now, I don’t consider myself much of a ‘fixit’ kinda guy. Put me in front of a computer, and I’ll figure out how everything works, but I’ve never been one to unscrew my computer and replace things. But armed with the confidence that comes from looking at a &lt;a href=&quot;https://www.ifixit.com/Guide/MacBook+Pro+13-Inch+Unibody+Early+2011+Hard+Drive+Replacement/5119&quot;&gt;ifixit guide and video&lt;/a&gt;, I decided to replace my hard drive. It was easy, and even enjoyable! Best of all, another scan of my new hard drive, with Scannerz, revealed no errors!&lt;/p&gt;

&lt;p&gt;Most similar tools are really just a simple GUI layer over Smartmontools. While Smartmoontools and the native Disk Utility said my drive was fine, Scannerz reported several issues. Scannerz is the real deal. If you have a Mac, and wonder if you should get it, go for it. Unless you administer a bunch of Macs, you probably just need the &lt;strong&gt;Scannerz with Phoenix, Performance Probe 2, and FSE-Lite&lt;/strong&gt; version. &lt;/p&gt;

&lt;h3 id=&quot;caskroom&quot;&gt;Caskroom&lt;/h3&gt;
&lt;p&gt;One other gem, which I’d heard of, but never gotten around to trying, was &lt;a href=&quot;http://caskroom.io&quot;&gt;Caskroom&lt;/a&gt;. If you’re on OSX and you like Unix tools, you probably already know that Homebrew is an awesome package manager, which lets you download utilities easily. It’s one of the first things I install on any new Mac. Caskroom is an extension to Homebrew, which allows you to download regular OSX applications, including Google Chrome, Screenflow, or Fantastical, right from the command line! There’s no need to go to the site, download the image, open it, and then unmount the image. Just type in something like this, and you’re good to go:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
brew cask install google-chrome
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The only downside is that not every application can be downloaded this way, and if you’re using a version that is not there, you’ll either need to add it, or go do it the old-fashioned way. But…consider the possibilities. If you had to download dozens of apps, you could use a shell script to set up the bulk of them, and then just deal with any errors or missing apps later.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:siracusa&quot;&gt;
      &lt;p&gt;Sadly, OSX Yosemite is the final one; the end of an era. &lt;a href=&quot;http://arstechnica.com/apple/2015/04/after-fifteen-years-ars-says-goodbye-to-john-siracusas-os-x-reviews/&quot;&gt;http://arstechnica.com/apple/2015/04/after-fifteen-years-ars-says-goodbye-to-john-siracusas-os-x-reviews/&lt;/a&gt; &lt;a href=&quot;#fnref:siracusa&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2015/04/27/tealeaf-course-2-quiz-3</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2015/04/27/course-2-quiz-3/"/>
    <title>Tealeaf Course 2, Quiz 3</title>
    <updated>2015-04-27T15:59:14-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;The last few weeks have been quite interesting. I had a lot of computer problems, which culminated in my replacing a failing hard drive. It was much easier than I thought. I’ll discuss that in another post, but for now, I’d like to share my answers to the third quiz of the &lt;a href=&quot;http://www.gotealeaf.com/curriculum#!rails&quot;&gt;Tealeaf Academy Course 2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As always, I answered the quiz questions with my course notes in &lt;a href=&quot;http://orgmode.org&quot;&gt;org-mode&lt;/a&gt;, and converted them into a Github gist. Here are my answers…&lt;/p&gt;

&lt;!-- more --&gt;

&lt;noscript&gt;&lt;pre&gt;* Quiz: Lesson Three

** Question 1 
What&amp;#39;s the difference between rendering and redirecting? What&amp;#39;s the impact with regards to instance variables, view templates?

** Answer 1

Consider this example:
#+BEGIN_SRC ruby
  def update
    if @post.update(post_params)
      flash[:notice] = &amp;quot;The post was updated.&amp;quot;
      redirect_to post_path(@post)
    else
      render &amp;#39;edit&amp;#39;
    end
  end
#+END_SRC

If the update is successful, a message is displayed: &amp;quot;The post was updated.&amp;quot; Then the user is redirected to the main &amp;#39;/posts&amp;#39; page. If the update is not successful, the &amp;#39;/posts/:id/edit&amp;#39; page is rendered. Rending the template is important, because then the instance variable (*@post* in the example above), will still be accessible.

** Question 2
If I need to display a message on the view template, and I&amp;#39;m redirecting, what&amp;#39;s the easiest way to accomplish this?
** Answer 2
In the previous example, we saw:
#+BEGIN_SRC ruby
flash[:notice] = &amp;quot;The post was updated.&amp;quot;
#+END_SRC
The message will disappear after another action is performed. For more information on *flash*, see: [[https://github.com/rails/rails/blob/4-2-stable/actionpack/lib/action_dispatch/middleware/flash.rb][rails/actionpack/lib/action_dispatch/middleware/flash.rb]]

** Question 3
If I need to display a message on the view template, and I&amp;#39;m rendering, what&amp;#39;s the easiest way to accomplish this?
** Answer 3
You can use =flash.now=.
#+BEGIN_SRC ruby
flash.now[:alert] = &amp;quot;This is a sample message.&amp;quot;
#+END_SRC
The documentation is here: [[https://github.com/rails/rails/blob/4-2-stable/actionpack/lib/action_dispatch/middleware/flash.rb]]
** Question 4
Explain how we should save passwords to the database.

** Answer 4
If we take the &amp;#39;Post-it&amp;#39; app that I&amp;#39;ve just created as an example:
1. In the *user.rb* model:
#+BEGIN_SRC ruby
class User &amp;lt; ActiveRecord::Base
  has_many :posts
  has_many :comments
  has_many :votes
  
  has_secure_password validations: false

  validates :username, presence: true, uniqueness: true
  validates :password, presence: true, on: :create, length: {minimum: 6}
end
#+END_SRC 

We can see that the model requires a secure password, with a minimum of 6 characters, which is validated upon creation (this prevents the app from asking for a password after every user action).

Passwords are not save as strings within the database. Rather, Rails uses a &amp;#39;one-way hash&amp;#39; to create a &amp;#39;password digest&amp;#39; in the database. A password like &amp;quot;X7gh29y!&amp;quot; could become something like &amp;quot;hsi38smcskjcb8nfo08u23dlls08wejdnkxjsbekcksie&amp;quot; after the one-way hash conversion. When a user logs in, the following process happens:

1. The user enters a username and password.
2. The username is matched in the database. The password is converted to a one-way hash. If it matches the password digest (previously one-way hashed) in the database, the system authenticates the user. If not, the attempt is rejected. *Note*, in Rails, this requires the *bcrypt-ruby* gem: https://rubygems.org/gems/bcrypt-ruby/

Looking over the Rails [[https://github.com/rails/rails/blob/master/activemodel/lib/active_model/secure_password.rb][rails/activemodel/lib/active_model/secure_password.rb]] provides a lot of interesting facts about password security in Rails. For example, I just learned that the bcrypt-ruby gem has a limit of 72 characters, so if a password is passed with more than 72 characters, any extra characters will be ignored.

Beyond Rails-specific authentication methods, a general concept of password security should include ways to prevent passwords from being guessed or accessed directly by malicious parties.

Additional security features that are sometimes implemented:
- In some cases, after a set number of failed attempts, the user is required to enter a CAPTCHA value, or even wait a designated amount of time for the authentication process to reset (optional).
- If a user forgets his or her password, the database should not be able to return the original password. If it can return the original password, that means the password was saved as a string in the database, and could be viewed by malicious parties. (This should never happen in Rails, unless the developer has abandoned conventions...)



** Question 5
What should we do if we have a method that is used in both controllers and views?
** Answer 5
We can create a helper method in =ApplicationController.rb=.

Here&amp;#39;s an example of one in my Post-it app:
#+BEGIN_SRC ruby
helper_method :current_user, :logged_in?
#+END_SRC 

** Question 6
What is memoization? How is it a performance optimization?
** Answer 6
Memoization is a technique that improves performance by querying the database once, and then keeping that value in memory, so that subsequent actions/calls do not require further queries. According to [[http://en.wikipedia.org/wiki/Memoization][Wikipedia]], it was invented by Donald Michie.

My Post-it app has a couple examples. For example, in ApplicationController:
#+BEGIN_SRC ruby
  def current_user
    @current_user ||= User.find(session[:user_id]) if session[:user_id]
  end
#+END_SRC

This method checks to see if there is an active user, and if there is, assigns that user to the *@current_user* instance variable. For the rest of the session, the application will &amp;#39;remember&amp;#39; the identity of the current user, so there will be no need to query the database again. 

The syntax above is the most common in Rails, but there are other ways to use memoization. Justin Weiss has an interesting blog post on other, more &amp;#39;advanced&amp;#39; versions here: http://www.justinweiss.com/blog/2014/07/28/4-simple-memoization-patterns-in-ruby-and-one-gem/

** Question 7
If we want to prevent unauthenticated users from creating a new comment on a post, what should we do?
** Answer 7
In *application_controller.rb*:
#+BEGIN_SRC ruby
class ApplicationController &amp;lt; ActionController::Base
  # Prevent CSRF attacks by raising an exception.
  # For APIs, you may want to use :null_session instead.
  protect_from_forgery with: :exception

  helper_method :current_user, :logged_in?
  
  def current_user
    @current_user ||= User.find(session[:user_id]) if session[:user_id]
  end

  def logged_in?
    !!current_user
  end

  def require_user
    if !logged_in?
      flash[:error] = &amp;quot;You must be logged in to do that.&amp;quot;
      redirect_to root_path
    end
  end
end
#+END_SRC

- The *current_user* method checks to see if there is a user is logged in for the session, and if so, loads the user_id into an instance variable, *@current_user*.
- Predictably, *logged_in* checks to see if the user is logged in.
- And *require_user* returns an error message when a user tries to perform an action (such as commenting on a post) without being logged in.
- All of the other controllers inherit these methods. Additionally, we can use =before_action :require_user= in *comments_controller.rb*:


#+BEGIN_SRC ruby
  class CommentsController &amp;lt; ApplicationController

    before_action :require_user

    #(code omitted for brevity)
  end
#+END_SRC




** Question 8
Suppose we have the following table for tracking &amp;quot;likes&amp;quot; in our application. How can we make this table polymorphic? Note that the &amp;quot;user_id&amp;quot; foreign key is tracking who created the like.

| id | user_id | photo_id | video_id | post_id |
|----+---------+----------+----------+---------|
|  1 |       4 |          |       12 |         |
|  2 |       7 |          |          |       3 |
|  3 |       2 |        6 |          |         |

** Answer 8

This table:

| id | user_id | photo_id | video_id | post_id |
|----+---------+----------+----------+---------|
|  1 |       4 |          |       12 |         |
|  2 |       7 |          |          |       3 |
|  3 |       2 |        6 |          |         |

Can be represented in a polymorphic association like this:

| id | user_id | likeable_type | likeable_id |
|----+---------+---------------+-------------|
|  1 |       4 | Video         |          12 |
|  2 |       7 | Post          |           3 |
|  3 |       2 | Photo         |           6 |

** Question 9
How do we set up polymorphic associations at the model layer? Give example for the polymorphic model (e.g., Vote) as well as an example parent model (the model on the 1 side, e.g.,, Post).
** Answer 9
**** Vote Model
#+BEGIN_SRC ruby
  class Vote &amp;lt; ActiveRecord::Base
    belongs_to :voteable, polymorphic: true
  end
#+END_SRC

**** Voteable Model
#+BEGIN_SRC ruby
  class Voteable &amp;lt; ActiveRecord::Base
    has_many :votes, as: :voteable
  end
#+END_SRC
** Question 10
What is an ERD diagram, and why do we need it?
** Answer 10
An ERD, or Entity-relationship diagram, is a model that shows the way that data objects/entities are associated. It&amp;#39;s a fundamental way to organize and structure our data models, and build schemas that are stable, scalable, and robust. (The [[http://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model][Wikipedia entry for ERD]] is a fascinating read!)

Front-end developers usually use wire frames to plan their sites. I like to think of an ERD as a kind of &amp;#39;wire frame for back-end/full-stack developers&amp;#39;.&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/XiaoA/e8365388ce81700ff573.js&quot;&gt; &lt;/script&gt;

</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2015/03/23/comment-away</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2015/03/23/comment-away/"/>
    <title>Comment Away!</title>
    <updated>2015-03-23T09:13:31-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;I’ve enabled &lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt; comments on this site. In past blogs, I used comments, but many of the arguments against them make sense to me. In some cases, comments invite a lot of negativity and spam, and require too much administration. But there are also many examples where comments have helped build a strong sense of community and added value to a blog. I’d like to give it a shot, because I’d love to hear from my readers.&lt;/p&gt;

&lt;p&gt;Setting up comments for my Jekyll blog was easy.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;First, I needed a Disqus account. Then, I choose the category (‘tech’, of course…). Finally, I choose the platform (‘Universal Code’).&lt;/p&gt;

&lt;p&gt;I took the autogenerated code, and put it in my ‘post.html’ layout, and that was it.&lt;/p&gt;

&lt;p&gt;To use comments on a post, I simply added &lt;code&gt;comments: true&lt;/code&gt; to my front matter when I create a site post. If I don’t want to use comments on a particular post, I can just omit that line, or write: &lt;code&gt;comments: false&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I haven’t set up any analytics for this blog, and I doubt many people are reading it yet, but I hope this will provide a way to engage readers, and let others contribute to the discussion. We can learn a lot from each other!&lt;/p&gt;

&lt;p&gt;Here’s a link to the &lt;a href=&quot;https://disqus.com/websites/&quot;&gt;DISQUS For Websites&lt;/a&gt; page, if you’d like to learn more.&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2015/03/21/tealeaf-course-2-quiz-1</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2015/03/21/course-2-quiz-1/"/>
    <title>Course 2, Quiz 1</title>
    <updated>2015-03-21T22:17:00-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;I’ve completed the first lesson of &lt;a href=&quot;http://www.gotealeaf.com/curriculum#!rails&quot;&gt;Course 2&lt;/a&gt;. In the pre-course, we followed the classic Ruby on Rails &lt;a href=&quot;http://guides.rubyonrails.org/getting_started.html&quot;&gt;‘Build a Blog’&lt;/a&gt; tutorial, which was great, because I did that back in July, but this time, I could open the files, and understand the Ruby syntax. The tutorial uses Rails generators, which &lt;em&gt;auto-magically&lt;/em&gt; build the pages and tables for you. When you run the code, and the files are set up in seconds, it looks impressive, but it isn’t clear to beginners what is happening. By the end of this course, I’ll be able to build a Rails project from scratch, without any gimmicks or shortcuts. &lt;/p&gt;

&lt;p&gt;I’ve spent a lot of time going over the &lt;a href=&quot;http://guides.rubyonrails.org/index.html&quot;&gt;Rails guides&lt;/a&gt;, the &lt;a href=&quot;http://api.rubyonrails.org&quot;&gt;Rails API documentation&lt;/a&gt;, and reading blogs and &lt;a href=&quot;http://stackoverflow.com/search?q=Rails&quot;&gt;Stack Overflow&lt;/a&gt; to deepen my understanding. I read a lot of technical writing and documentation at work, and I’ve learned that the most important thing is to go from an &lt;em&gt;extensive&lt;/em&gt; understanding to an &lt;em&gt;intensive&lt;/em&gt; understanding. In other words, the first time you go through the documentation, you’re going to be bombarded with information, much of which will not be relevant of perhaps even very easy to digest. But you should get an overall feel of the features and limitations of the product or system. Most imporantly, you should make sure that you can refer to it again, so that when you need that information, you can find it. Unless you have a photographic memory, you’re not going to memorize it all in one reading, or even several.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Frameworks like Rails provide a lot of shortcuts and powerful features for knowledgeable developers, but they can be hard to understand for beginners. Based on some of the questions and discussions I’ve seen online, I think a lot of people dive right into Ruby on Rails, without understanding Ruby. Then, they get lost as they follow along with tutorials that help them automatically generate the files they need, complete with the data they need to get started. It seems like a great convenience, but when it’s time to customize it, it’s suddenly very challenging. That’s where I was back in July. Rails conventions make it so easy, that it seems like magic, but it’s a very logical process of setting up &lt;strong&gt;models&lt;/strong&gt; to manage the data, &lt;strong&gt;viewers&lt;/strong&gt; to display the data in ways that humans can understanding, and &lt;strong&gt;controllers&lt;/strong&gt; that direct the process. In this course, we’re learning to peel back all of the ‘Rails magic’ and learn how each line of code can be used to build powerful applications. The Tealeaf program starts with Ruby, then moves through Sinatra, and then Rails, which has helped me build a foundation for mastering Rails. In the first lesson, we started working on a new project, which I’ll be discussing soon.&lt;/p&gt;

&lt;p&gt;I keep my notes, experiments, and source code for each lesson in Emacs &lt;a href=&quot;http://www.orgmode.org&quot;&gt;Org-Mode&lt;/a&gt; files. Org-Mode’s &lt;a href=&quot;http://orgmode.org/worg/org-contrib/babel/intro.html&quot;&gt;Babel&lt;/a&gt; feature is a fantastic implementation of &lt;a href=&quot;http://en.wikipedia.org/wiki/Literate_programming&quot;&gt;literate programming&lt;/a&gt;; You can write source code, in a variety of languages (hence, the name, “Babel…”), and evaluate the code right inside of the Org-Mode outline file. You can also export (“tangle”) the code into separate files, which can be updated via org-mode! Keeping all my work in an org-mode file makes it convenient to study the code, and track my development. For this course, I’ve started a ‘course2-notes.org’ outline. I took the quiz in my ‘course2-notes.org’ file, and exported the quiz to a Gist, which I’ve embedded into this blog post. While that might seem complicated, it provides me one central location to store all of the content, links, source code, and experiments for each lesson. It’s perfect for reviewing the material, and it’s really simple to implement. After all, it’s all just data…&lt;img class=&quot;emoji&quot; title=&quot;smile&quot; alt=&quot;smile&quot; src=&quot;https://github.global.ssl.fastly.net/images/icons/emoji/smile.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here’s the quiz, which I saved a as a &lt;a href=&quot;https://gist.github.com/XiaoA/e489f82212e3107a14dc#file-tl_course2_quiz1-org&quot;&gt;gist&lt;/a&gt;, and embedded in this post…&lt;/p&gt;

&lt;hr /&gt;

&lt;noscript&gt;&lt;pre&gt;* Quiz: Lesson 1

** Question 1
Why do they call it a relational database?

*** Solution 1
Because data is stored and accessed in context, or relation, to other data. Every table has a Primary Key, which is a unique identifier for that row. When that data is inserted into another table, as a Foreign Key, We can form relationships between different data tables, allowing us to select, update, and join data in countless ways.

For example, let&amp;#39;s say that we worked at a university, and we were asked if a student had turned in an assignment. We could check the table with all student activity, &amp;quot;ACTIVITY_ACCUMULATOR&amp;quot;, but we probably wouldn&amp;#39;t understand the data, because user information has been abstracted into UID numbers and keys. But because databases are relational, we can use the information we know to find information that we need.

For example: 

**** USERS table

We know the student&amp;#39;s User ID is: *buchanana*. So we can use that to get more relevant information:

#+BEGIN_SRC sql
SELECT pk1, user_id, firstname, lastname, row_status, email FROM users WHERE user_id = &amp;#39;buchanana&amp;#39;;
#+END_SRC

And we would get the following:

|   PK1 | USER_ID   | FIRSTNAME | LASTNAME | ROW_STATUS | EMAIL                 |
|-------+-----------+-----------+----------+------------+-----------------------|
| 10002 | buchanana | Andrew    | Buchanan |          2 | buchanana@example.edu |


**** COURSE_MAIN table

Now, we can check for the PK1 of the course. We know that the ID includes 34789...

#+BEGIN_SRC sql
select * from course_main where course_id like &amp;#39;%34789%&amp;#39;;

#+END_SRC
|    PK1 | COURSE_ID                 | COURSE_NAME      | DATA_SRC_PK1 |
|--------+---------------------------+------------------+--------------|
| 598851 | ECON101-0012-34789-FS2014 | Economics 101    |          833 |
| 788372 | HIST306-0001-34789-SP2015 | U.S. History 306 |          834 |

We can ignore the first row, because it&amp;#39;s the wrong semester. So we know that the =Course Main= table&amp;#39;s primary key is &amp;#39;788372&amp;#39;.

Now that we have the primary keys for the user and the course, we can check the user&amp;#39;s activity.

**** ACTIVITY_ACCUMULATOR table

And we can see that the user submitted an assignment in that class on March 3, 2015, at 2:03PM.

|    PK1 | COURSE_MAIN_PK1 | USERS_PK1 | COURSE_CONTENT_PK1 | DATA                              | TIMESTAMP       |
|--------+-----------------+-----------+--------------------+-----------------------------------+-----------------|
| 873737 |          788372 |     10002 |           83712682 | Assignments/assignment_submit.jsp | 03-MAR-15 14:03 |
|        |                 |           |                    |                                   |                 |

We could do a few things to combine the steps, and also narrow down our search, but even this simple example shows the power of manipulating data in relational databases.


** Question 2
What is SQL?

*** Solution 2
SQL, or Structured Query Language, is a declarative language that allows us to work with relational databases. Common declarations include: 
1. SELECT
2. UPDATE
3. COMMIT
4. JOIN
5. UNION
6. ADD TABLE
7. DROP TABLE
8. INSERT

(In my job, I&amp;#39;m not a DBA, but I do have some do basic database operations. I use the first three daily, 4 and 5 occasionally, and the others almost never.)

** Question 3
There are two predominant views into a relational database. What are they, and how are they different?

*** Solution 3
1. *Schema:* Provides a &amp;#39;bird&amp;#39;s eye view&amp;#39; of the structure of the database, including the column and row names, constraints, and data types.
2. *View:* Provides a live view of the data in a table layout, like a spreadsheet.

** Question 4
In a table, what do we call the column that serves as the main identifier for a row of data? We&amp;#39;re looking for the general database term, not the column name.

*** Solution 4
The *primary key* is the main identifier for a row of data in a database table.

** Question 5
What is a foreign key, and how is it used?

*** Solution 5
A foreign key in one table is a primary key from another table; it&amp;#39;s used to join the data from multiple tables. (e.g., The =USERS.USER_PK1= primary key will always refer to the same user; if that value is associated with data in another table, that data will then be available to query/edit, just as if it were in the =USERS= table.)

** Question 6
At a high level, describe the ActiveRecord pattern. This has nothing to do with Rails, but the actual pattern that ActiveRecord uses to perform its ORM duties.

*** Solution 6
ActiveRecord is a way of accessing databases without SQL (in the Rails  implementation, we can just use Ruby). 

- DB Tables = Classes
- DB Rows = Objects

** Question 7
If there&amp;#39;s an ActiveRecord model called &amp;quot;CrazyMonkey&amp;quot;, what should the table name be?

*** Solution 7
I think it should be =crazy_monkeys=. Fortunately, I can open up the Rails console and check, using the =.tableize= method:

#+BEGIN_SRC sh
小A曰:rails console
Loading development environment (Rails 4.2.0)
irb(main):001:0&amp;gt; &amp;quot;CrazyMonkey&amp;quot;.tableize
=&amp;gt; &amp;quot;crazy_monkeys&amp;quot;
#+END_SRC

Looks like I was right. :)

** Question 8
If I&amp;#39;m building a 1:M association between =Project= and =Issue=, what will the model associations and foreign key be?

*** Solution 8

#+BEGIN_SRC ruby
  class Project &amp;lt; ActiveRecord::Base
    has_many: :issues
  end
#+END_SRC

#+BEGIN_SRC ruby
  class Issue &amp;lt; ActiveRecord::Base
    belongs_to: :project
  end
#+END_SRC

** Question 9
Given this code =class Zoo &amp;lt; ActiveRecord::Base has_many :animals end=

- What do you expect the other model to be and what does database schema look like?
- What are the methods that are now available to a zoo to call related to animals?
- How do I create an animal called &amp;quot;jumpster&amp;quot; in a zoo called &amp;quot;San Diego Zoo&amp;quot;?

*** Solution 9
1) The other table should look like this:

#+BEGIN_SRC ruby
  class Animal
    :belongs_to :zoo
  end
#+END_SRC

Because the =Zoo= class includes the =has_many :animals= association, we know that =Animal= will include =belongs_to :zoo=. 

Besides all of the inherited methods from =ActiveRecord= and any methods declared within the =Zoo= class, =Zoo= will be able to access =zoo.animal=, as well as =zoo.animal.first=, =zoo.animal.last=, etc.

To create an animal called &amp;quot;jumpster&amp;#39; in a zoo called &amp;quot;San Diego,&amp;quot; you&amp;#39;d need to create the objects:

1. In the terminal, make sure that you are in Rails Console, or navigate to the correct directory and start the Rails Console.
2. Enter the following Command to create a row for a new &amp;#39;Zoo&amp;#39; object, &amp;#39;San Diego Zoo&amp;#39;, in the database:
   #+BEGIN_SRC ruby
     irb(main):019:0&amp;gt; zoo = Zoo.create(name: &amp;#39;San Diego Zoo&amp;#39;)
   #+END_SRC 
3. Enter the following command to create a row for a new &amp;#39;Animal&amp;#39; object, &amp;#39;Jumpster&amp;#39;, in the database:
#+BEGIN_SRC ruby
irb(main):020:0&amp;gt; Animal.create(name: &amp;#39;jumpster&amp;#39;, zoo: zoo)
#+END_SRC

** Question 10
What is mass assignment? What&amp;#39;s the non-mass assignment way of setting values?

*** Solution 10
Mass assignment is a convenience, which allows us to assign all of the values in a single operation. For example:

#+BEGIN_SRC ruby
irb(main):021:0&amp;gt; user = User.new({username: &amp;#39;carmichaelc&amp;#39;, firstname: &amp;#39;Chuck&amp;#39;, lastname: &amp;#39;Bartowski&amp;#39;})

# Note that we can omit the &amp;#39;{}&amp;#39; (and also use hash rockets to set values): 

irb(main):021:0&amp;gt; user = User.new(username =&amp;gt; &amp;#39;carmichaelc&amp;#39;, firstname =&amp;gt; &amp;#39;Chuck&amp;#39;, lastname =&amp;gt; &amp;#39;Bartowski&amp;#39;)
#+END_SRC

Without mass assignment, we&amp;#39;d need to set up each value separately, like this:

#+BEGIN_SRC ruby
irb(main):021:0&amp;gt; user = User.new user.username = &amp;#39;carmichaelc&amp;#39; user.firstname = &amp;#39;Chuck&amp;#39; user.lastname = &amp;#39;Bartowki&amp;#39;
#+END_SRC

** Question 11
What does this code do? =Animal.first=

*** Solution 11
It will return the first row (remember that a row == an object...) from the =Animal= table.

** Question 12
If I have a table called &amp;quot;animals&amp;quot; with columns called &amp;quot;name&amp;quot;, and a model called Animal, how do I instantiate an animal object with name set to &amp;quot;Joe&amp;quot;. Which methods makes sure it saves to the database?

*** Solution 12
You can use the =.new= method, just like with Ruby, but that object will not be persistent. To save it to the database, you&amp;#39;ll also have to call the =.save= method. For example:

#+BEGIN_SRC ruby
irb(main):025:0&amp;gt; animal = Animal.new(name: &amp;#39;Joe&amp;#39;)
irb(main):026:0&amp;gt; animal.save
#+END_SRC

Or you can use =.create= method, from Rails, to instantiate an object and save it to the database, in one operation:

#+BEGIN_SRC ruby
irb(main):025:0&amp;gt; animal = Animal.create(name: &amp;#39;Joe&amp;#39;)
#+END_SRC

** Question 13
How does a M:M association work at the database level?


*** Solution 13

- Table *users* has a 1:M association with the JOIN table, *memberships*.
- Table *organizations* has a 1:M association with the JOIN table, *memberships*.
- Table *memberships* belongs to both *users* and *organizations*, and provides a means for joining the other tables.

Consider these very simple models:

#+BEGIN_SRC ruby
  class User &amp;lt; ActiveRecord::Base
    has_many :memberships
    has_many :organizations, through :memberships
  end

  class Membership &amp;lt; ActiveRecord::Base
    belongs_to :users
    belongs_to :organizations
  end

  class Organization &amp;lt; ActiveRecord::Base
    has_many :memberships
    has_many :users, through :memberships
  end
#+END_SRC

**** Users

|  ID | USERNAME | FIRSTNAME | LASTNAME | EMAIL               |
|-----+----------+-----------+----------+---------------------|
| 111 | smithj   | John      | Smith    | smithj@example.com  |
| 112 | jensenc  | Carol     | Jensen   | jensenc@example.com |

**** Memberships

| ID | USER_ID | ORGANIZATION_ID | ROLE | ROW_STATUS |
|----+---------+-----------------+------+------------|
|  1 |     111 |              54 | L    |          0 |
|  2 |     112 |              54 | M    |          2 |


**** Organizations

| ID | ORGANIZATION NAME   | Category |
|----+---------------------+----------|
| 54 | Pocahontas Fan Club | History  |

Looking at the the information in the database, we can see that John Smith is the Leader of the &amp;#39;Pocahontas Fan Club&amp;#39;, and that Carol Jensen is a Member. Also, her &amp;#39;ROW_STATUS&amp;#39; is different, so we&amp;#39;ll need to check the schema to find out what that means.

ActiveRecord provides a powerful way to add, edit, and remove data from the database, without needing to worry about different SQL syntax styles, directly from within Rails. The database provides a way to easily verify the data, and it also allows Rails developers to work with Database Administrators and programmers more familiar with SQL.

** Question 14
What are the two ways to support a M:M association at the ActiveRecord model level? Pros and cons of each approach?

*** Solution 14
There are two ways to support a M:M association with ActiveRecord:

1. =has_and_belongs_to_many=: The main advantage is that it doesn&amp;#39;t require a JOIN table, because it can make the M:M association directly between two tables. 
2. =has many :through=: requires a JOIN table and a JOIN model, but because we have a JOIN table, we can add more attributes to the association, so that it can store more data, making it a much more flexible option.

Going forward, =has_many :through= is the recommended method for creating ActiveRecord associations, because =has_and_belongs_to_many= will be deprecated in the future.

** Question 15
Suppose we have a User model and a Group model, and we have a M:M association all set up. How do we associate the two?

*** Solution 15
We can create a =USER_GROUP= model, and a =user_groups= table.

#+BEGIN_SRC ruby
  class User &amp;lt; ActiveRecord::Base
    has_many :user_groups, foreign_key: :user_id
    has many :groups, through: :user_groups
  end

  class UserGroup &amp;lt; ActiveRecord::Base
    belongs_to :user, foreign_key: :user_id
    belongs_to :group, foreign_key: :group_id
  end

  class Group &amp;lt; ActiveRecord::Base
    has_many :user_groups, foreign_key: :group_id
    has_many :users, through: :user_groups
  end
#+END_SRC&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/XiaoA/e489f82212e3107a14dc.js&quot;&gt; &lt;/script&gt;

</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2015/03/18/sinatra-blackjack</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2015/03/18/sinatra-blackjack/"/>
    <title>Sinatra Blackjack</title>
    <updated>2015-03-18T00:00:00-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;Step up and place your bets! I’ve created a simple Blackjack game here: &lt;a href=&quot;https://salty-crag-8411.herokuapp.com/&quot;&gt;https://salty-crag-8411.herokuapp.com/&lt;/a&gt;. I hope you’ll give it a try! I built it with &lt;a href=&quot;http://www.sinatrarb.com/&quot;&gt;Sinatra&lt;/a&gt; and deployed it to &lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Like Rails, Sinatra is a Domain-Specific Language, or &lt;a href=&quot;http://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;DSL&lt;/a&gt;, based on Ruby. Sinatra uses a simple syntax for specifying routes with Ruby blocks, which are outlined on Sinatra’s &lt;a href=&quot;http://www.sinatrarb.com/intro.html&quot;&gt;Getting Started&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;In my &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp&quot;&gt;Sinatra Blackjack game&lt;/a&gt;, these routes help control the flow of the Blackjack game, as the player competes with the dealer for the highest Blackjack score (21). Just like Rails, it uses the &lt;a href=&quot;mvc&quot;&gt;MVC&lt;/a&gt; pattern to render or redirect the appropriate page. Sinatra is a pure joy to work with; simple but powerful! Here’s how I used it to build a simple Blackjack game.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;game-start&quot;&gt;Game Start&lt;/h2&gt;
&lt;p&gt;Sinatra serves the ‘/’ (root) route, and evaluates the conditional in the &lt;code&gt;&#39;do&#39;&lt;/code&gt; block:&lt;/p&gt;

&lt;div class=&quot;github-sample-reference&quot;&gt;
  &lt;div class=&quot;author-info&quot;&gt;
    &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;This Github Sample&lt;/a&gt; is by &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;XiaoA&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&quot;meta-info&quot;&gt;
    main.rb &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;view&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/XiaoA/sinatra_blackjack_webapp/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;raw&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/game&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/new_player&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the &lt;code&gt;session[:player_name]&lt;/code&gt; contains a value (because the user has entered a name into the input form), the game is redirected to the &lt;code&gt;/game&lt;/code&gt; view. If it’s empty, the user must enter a name, so it redirects to the &lt;code&gt;/new_player&lt;/code&gt; route.&lt;/p&gt;

&lt;div class=&quot;github-sample-reference&quot;&gt;
  &lt;div class=&quot;author-info&quot;&gt;
    &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;This Github Sample&lt;/a&gt; is by &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;XiaoA&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&quot;meta-info&quot;&gt;
    main.rb &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;view&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/XiaoA/sinatra_blackjack_webapp/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;raw&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/new_player&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:new_player&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/new_player&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Please enter your name.&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;halt&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:new_player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_bankroll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;INITIAL_PLAYER_BANLROLL&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/bet&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The app does not use a database. Instead, the following types of &lt;code&gt;session[:id]&lt;/code&gt; (cookies) are used to store persistent data:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;[:player_bankroll]&lt;/code&gt;: The player’s total amount of money available to bet&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;[:player_name]&lt;/code&gt;: The player’s name&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;[:bet_amount]&lt;/code&gt;: The value of the player’s bet&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;[:dealer_cards]&lt;/code&gt;: The dealer’s hand&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;[:player_cards]&lt;/code&gt;: The player’s hand&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;[:deck]&lt;/code&gt;: The deck&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;[:turn]&lt;/code&gt;: Whose turn it is to hit/stand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When a user vists &lt;a href=&quot;https://salty-crag-8411.herokuapp.com/&quot;&gt;https://salty-crag-8411.herokuapp.com/&lt;/a&gt;, he or she is prompted for a name. This name is stored in &lt;code&gt;session[:player_name]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next, the player is prompted for a bet.&lt;/p&gt;

&lt;p&gt;The player is taken to “/bet” and the ‘bet.html.erb’ view is rendered:&lt;/p&gt;

&lt;div class=&quot;github-sample-reference&quot;&gt;
  &lt;div class=&quot;author-info&quot;&gt;
    &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;This Github Sample&lt;/a&gt; is by &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;XiaoA&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&quot;meta-info&quot;&gt;
    main.rb &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;view&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/XiaoA/sinatra_blackjack_webapp/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;raw&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/bet&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:bet&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/bet&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_bankroll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/no_money&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bet_amount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bet_amount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; 
    &lt;span class=&quot;vi&quot;&gt;@error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You must place a bet.&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;halt&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bet_amount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bet_amount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_bankroll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Your bet must be between $5 and $&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_bankroll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;halt&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bet_amount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bet_amount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/game&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After the player enters a bet amount, a series of checks are performed:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If the player has no money, the game is redirected to ‘/no_money’ and the game is over.&lt;/li&gt;
  &lt;li&gt;If the player tries to enter anything other than a number, the dealer asks for the player to try again.&lt;/li&gt;
  &lt;li&gt;If the bet is less than the minimum ($5), or more than the player’s total bankroll, the player is asked to bet again.&lt;/li&gt;
  &lt;li&gt;If the bet is valid, the bet amount is saved as &lt;code&gt;session[:bet_amount]&lt;/code&gt;, and the player is directed to the ‘/game’ route.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the &lt;code&gt;&#39;/game&#39;&lt;/code&gt; route, the cards are shuffled and dealt.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If the player has 21, it’s a Blackjack.&lt;/li&gt;
  &lt;li&gt;If the player’s cards total more than 21, it’s a bust.&lt;/li&gt;
  &lt;li&gt;Oherwise the player is offered the chance to hit or stand.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;github-sample-reference&quot;&gt;
  &lt;div class=&quot;author-info&quot;&gt;
    &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;This Github Sample&lt;/a&gt; is by &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;XiaoA&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&quot;meta-info&quot;&gt;
    main.rb &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;view&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/XiaoA/sinatra_blackjack_webapp/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;raw&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/game&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:turn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# create a deck and put it in session&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;suits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;S&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;J&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Q&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;K&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:deck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;suits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shuffle!&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# deal cards&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:dealer_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:dealer_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:deck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:deck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:dealer_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:deck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:deck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;


  &lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculate_total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACKJACK_AMOUNT&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;winner!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; hit Blackjack!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACKJACK_AMOUNT&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;loser!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; busted at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:game&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;the-players-turn&quot;&gt;The Player’s Turn&lt;/h2&gt;
&lt;p&gt;If the player chooses to hit, he/she is redirected to &lt;code&gt;/game/player/hit&lt;/code&gt;.  &lt;/p&gt;

&lt;div class=&quot;github-sample-reference&quot;&gt;
  &lt;div class=&quot;author-info&quot;&gt;
    &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;This Github Sample&lt;/a&gt; is by &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;XiaoA&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&quot;meta-info&quot;&gt;
    main.rb &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;view&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/XiaoA/sinatra_blackjack_webapp/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;raw&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/game/player/hit&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:deck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculate_total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACKJACK_AMOUNT&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;winner!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; hit Blackjack!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACKJACK_AMOUNT&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;loser!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; busted at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the player chooses to stand, he/she is redirected to &lt;code&gt;/game/player/stand&lt;/code&gt;.  &lt;/p&gt;

&lt;div class=&quot;github-sample-reference&quot;&gt;
  &lt;div class=&quot;author-info&quot;&gt;
    &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;This Github Sample&lt;/a&gt; is by &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;XiaoA&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&quot;meta-info&quot;&gt;
    main.rb &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;view&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/XiaoA/sinatra_blackjack_webapp/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;raw&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/game/player/stand&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@success&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; stands.&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@show_hit_or_stand_buttons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/game/dealer&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;the-dealers-turn&quot;&gt;The Dealer’s Turn&lt;/h2&gt;
&lt;p&gt;Now, it’s the dealer’s turn. The dealer must hit until he/she has at least 17. We can use a constant, &lt;code&gt;DEALER_MINIMUM_HIT_AMOUNT&lt;/code&gt;, to represent this requirement.&lt;/p&gt;

&lt;div class=&quot;github-sample-reference&quot;&gt;
  &lt;div class=&quot;author-info&quot;&gt;
    &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;This Github Sample&lt;/a&gt; is by &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;XiaoA&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&quot;meta-info&quot;&gt;
    main.rb &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;view&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/XiaoA/sinatra_blackjack_webapp/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;raw&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/game/dealer&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:turn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dealer&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@show_hit_or_stand_buttons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculate_total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:dealer_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACKJACK_AMOUNT&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;loser!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer hit Blackjack.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACKJACK_AMOUNT&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;winner!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer busted at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; .&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DEALER_MINIMUM_HIT_AMOUNT&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/game/compare&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@show_dealer_hit_button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Until the dealer reaches at least 17, he/she must hit:&lt;/p&gt;

&lt;div class=&quot;github-sample-reference&quot;&gt;
  &lt;div class=&quot;author-info&quot;&gt;
    &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;This Github Sample&lt;/a&gt; is by &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;XiaoA&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&quot;meta-info&quot;&gt;
    main.rb &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;view&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/XiaoA/sinatra_blackjack_webapp/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;raw&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/game/dealer/hit&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:dealer_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:deck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/game/dealer&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;choosing-a-winner&quot;&gt;Choosing a Winner&lt;/h2&gt;
&lt;p&gt;Finally, if neither the player nor the dealer have hit Blackjack or busted, we need a way to compare the values of their hands, and declare a winner:&lt;/p&gt;

&lt;div class=&quot;github-sample-reference&quot;&gt;
  &lt;div class=&quot;author-info&quot;&gt;
    &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;This Github Sample&lt;/a&gt; is by &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;XiaoA&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&quot;meta-info&quot;&gt;
    main.rb &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;view&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/XiaoA/sinatra_blackjack_webapp/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;raw&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/game/compare&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@show_hit_or_stand_buttons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculate_total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculate_total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:dealer_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;loser!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; stands at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, and the dealer stands at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;winner!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; stands at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, and the dealer stands at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tie!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Both &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; and the dealer stand at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;ending-the-game&quot;&gt;Ending the Game&lt;/h2&gt;

&lt;p&gt;At the end of each match, the player is routed back to the beginning, where he/she is free to place a new bet or quit. There are two scenarios where he game must end:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The player has money, but leaves the table&lt;/li&gt;
  &lt;li&gt;The player is out of money&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;github-sample-reference&quot;&gt;
  &lt;div class=&quot;author-info&quot;&gt;
    &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;This Github Sample&lt;/a&gt; is by &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;XiaoA&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&quot;meta-info&quot;&gt;
    main.rb &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;view&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/XiaoA/sinatra_blackjack_webapp/305a73dfb31c31ad088a2040233eaca6ba6fe62a/main.rb&quot;&gt;raw&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/no_money&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:no_money&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/game_over&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:game_over&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Both of these scenarios can be handled very easily with the appropriate views:&lt;/p&gt;

&lt;div class=&quot;github-sample-reference&quot;&gt;
  &lt;div class=&quot;author-info&quot;&gt;
    &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/ff0ec7cb44644e8a434c3c106675048098dbd4ae/views/no_money.erb&quot;&gt;This Github Sample&lt;/a&gt; is by &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;XiaoA&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&quot;meta-info&quot;&gt;
    views/no_money.erb &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/ff0ec7cb44644e8a434c3c106675048098dbd4ae/views/no_money.erb&quot;&gt;view&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/XiaoA/sinatra_blackjack_webapp/ff0ec7cb44644e8a434c3c106675048098dbd4ae/views/no_money.erb&quot;&gt;raw&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Thanks&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playing!&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h3&amp;gt;&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;&amp;lt;p&amp;gt;Sorry, &amp;lt;%= session[:player_name] %&amp;gt;. You have &amp;lt;span class=&amp;quot;game_over_bankroll_amount&amp;quot;&amp;gt;$&amp;lt;%= session[:player_bankroll] %&amp;gt;&amp;lt;/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minimum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;If&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;want&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luck&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;again&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;please&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;see&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Cashier&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;more&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chips&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;&amp;lt;br /&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;btn btn-info btn-large&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/new_player&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;icon-user&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/i&amp;gt; Start Over&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;github-sample-reference&quot;&gt;
  &lt;div class=&quot;author-info&quot;&gt;
    &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/74ab3203e11c95eca5d2523cc517ba77c2e724d6/views/game_over.erb&quot;&gt;This Github Sample&lt;/a&gt; is by &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;XiaoA&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&quot;meta-info&quot;&gt;
    views/game_over.erb &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/74ab3203e11c95eca5d2523cc517ba77c2e724d6/views/game_over.erb&quot;&gt;view&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/XiaoA/sinatra_blackjack_webapp/74ab3203e11c95eca5d2523cc517ba77c2e724d6/views/game_over.erb&quot;&gt;raw&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Thanks&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playing!&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h3&amp;gt;&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;&amp;lt;h4&amp;gt;You&amp;#39;re walking away with &amp;lt;span class=&amp;quot;game_over_bankroll_amount&amp;quot;&amp;gt; $&amp;lt;%= session[:player_bankroll] %&amp;gt;&amp;lt;/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Looks&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;re ready to hit Vegas!&amp;lt;/h4&amp;gt;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&amp;lt;p&amp;gt;(Unless you&amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ve&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;changed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;might&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;want&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keep&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;?&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;&amp;lt;br /&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;btn btn-info btn-large&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/bet&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;icon-user&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/i&amp;gt; Keep Playing&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;ajax&quot;&gt;Ajax!&lt;/h2&gt;

&lt;p&gt;One cool bonus, which you should notice as you play the game, is that the entire page does not reload with each action. The application includes jQuery code to prevent all but essential reloads for the following game actions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;when the player hits&lt;/li&gt;
  &lt;li&gt;when the player stands&lt;/li&gt;
  &lt;li&gt;when the dealer hits&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;github-sample-reference&quot;&gt;
  &lt;div class=&quot;author-info&quot;&gt;
    &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/67cece1a535da0f85af11c96456d4a477a7bed3c/public/application.js&quot;&gt;This Github Sample&lt;/a&gt; is by &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;XiaoA&lt;/a&gt;
  &lt;/div&gt;
  &lt;div class=&quot;meta-info&quot;&gt;
    public/application.js &lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp/blob/67cece1a535da0f85af11c96456d4a477a7bed3c/public/application.js&quot;&gt;view&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/XiaoA/sinatra_blackjack_webapp/67cece1a535da0f85af11c96456d4a477a7bed3c/public/application.js&quot;&gt;raw&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;player_hits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;player_stands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dealer_hits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_hits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;click&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;form#hit_form input&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;vg&quot;&gt;$.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	    &lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	    &lt;span class=&quot;ss&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/game/player/hit&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	    &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#game&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replaceWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_stands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;click&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;form#stand_form input&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;vg&quot;&gt;$.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	    &lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	    &lt;span class=&quot;ss&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/game/player/stand&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	    &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#game&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replaceWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dealer_hits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;click&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;form#dealer_hit input&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;vg&quot;&gt;$.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	    &lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	    &lt;span class=&quot;ss&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/game/dealer/hit&amp;quot;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	    &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#game&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replaceWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This provides for a smoother user experience, and it saves some bandwidth. I hope you’ve enjoyed this tour of my first Sinatra web app. I had a lot fun building it.&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2015/03/04/tealeaf-course-one-review</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2015/03/04/tealeaf-course-one-review/"/>
    <title>Tealeaf Course One Review</title>
    <updated>2015-03-04T07:29:00-08:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;I’ve finished the first course at &lt;a href=&quot;http://www.gotealeaf.com&quot;&gt;Tealeaf Academy&lt;/a&gt;, and I feel great about what I’ve accomplished. I took my time, because I believe that it’s important to get the fundamentals right. Before I signed up, I read a lot of blogs from people who had gone through the course, and one thing I noticed was that some of them admitted that they’d rushed a bit in the beginning, and so felt overwhelmed later. Perhaps that is inevitable, because there is so much to learn, but I wanted to make sure that I had a solid foundation. Ruby on Rails is a powerful framework for building applications, but it is &lt;strong&gt;just Ruby&lt;/strong&gt;. So that means the better I understand Ruby, the better I’ll understand how to use Ruby on Rails.&lt;/p&gt;

&lt;p&gt;There are a lot of choices if you want to learn how to code. I’ve already discussed my rationale for signing up with Tealeaf in &lt;a href=&quot;http://andrewbuckingham.net/blog/2014/08/13/Tealeaf-Academy/&quot;&gt;an earlier post&lt;/a&gt;. So how did my first course go?
&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;In a word, it was outstanding. I know there are many other good programs out there there, but I know I picked the best one for me. I’ll address the four most important aspects of the program:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The quality of instruction&lt;/li&gt;
  &lt;li&gt;The structure of the course&lt;/li&gt;
  &lt;li&gt;The content of the lessons&lt;/li&gt;
  &lt;li&gt;Final thoughts&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;the-quality-of-instruction&quot;&gt;The quality of instruction&lt;/h2&gt;

&lt;p&gt;Unlike some programs, you don’t get to meet with a mentor each week. But you are never alone. If you have a question, or if you need to have someone review your code, you can use the forum to post it, and you’ll receive prompt and personalized attention. Obviously, the response times are faster during certain hours of the day, but you’ll get help within a few hours, at the very most. I often posted things at night, had a response waiting when I got up the next morning. On top of that, you can always chat with other students (and often TAs/instructors) in the ‘Student Lounge.’  Honestly, I probably retreated and spent too much time working through the material on my own, but that was my process. Officially, the course is a four-week course, but it took me closer to four months. Throughout all of that, the instructors are always kind and patient, and they know their stuff. &lt;/p&gt;

&lt;h2 id=&quot;the-structure-of-the-course&quot;&gt;The structure of the course&lt;/h2&gt;
&lt;p&gt;The course stresses learning the fundamentals of Ruby, and then progressively builds upon that knowledge. Before the course, there is a pre-course (note that after I’d started the first course, they turned this into a free ‘Prep Course’, which might be different than the pre-course that I took). You can learn a lot for free, by going through the &lt;a href=&quot;https://www.gotealeaf.com/books&quot;&gt;free textbooks and workbooks&lt;/a&gt; they’ve written. If you’re interested in trying the free Prep Course, create a free account here: &lt;a href=&quot;http://www.gotealeaf.com&quot;&gt;http://www.gotealeaf.com&lt;/a&gt;). In the pre-course, you go through their textbook, and learn the basics of Ruby. I spent a lot of time with this. I made an &lt;a href=&quot;http://www.orgmode.org&quot;&gt;org-mode&lt;/a&gt; outline, complete with code blocks, which I could export into their own Ruby files (see the files and the &lt;a href=&quot;https://github.com/XiaoA/tealeaf-precourse/blob/master/notes.org&quot;&gt;notes.org&lt;/a&gt; notebook &lt;a href=&quot;https://github.com/XiaoA/tealeaf-precourse/blob/master/README.md&quot;&gt;here&lt;/a&gt;). In the notes, I reworded the lessons, in my own words, with extra experiments, comments, and my record of the exercises (complete with my successes and failures). Looking at it now, it’s a very intimate record of my learning process. I wanted to explain everything in my own way, because that helped me process the information and internalize it. Plus, it’s a great reference that I can refer to later.&lt;/p&gt;

&lt;p&gt;The course itself consists of four lessons. In the past, before I joined Tealeaf, everyone learned together, and each lesson was scheduled to last one week. But over time, as some students fell behind, the format was changed to allow students to go at their own pace. This is one of the most unique aspects of the program, and one that has worked very well for me.&lt;/p&gt;

&lt;h2 id=&quot;the-content-of-the-lessons&quot;&gt;The content of the lessons&lt;/h2&gt;

&lt;h3 id=&quot;the-course-included-the-following-projects&quot;&gt;The Course included the following projects:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/XiaoA/tealeaf-course1-week1&quot;&gt;tealeaf-course1-week1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/XiaoA/reverse_madlibs&quot;&gt;reverse_madlibs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/XiaoA/tealeaf-course1-lesson2&quot;&gt;tealeaf-course1-lesson2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/XiaoA/Ruby_Blackjack&quot;&gt;Ruby_Blackjack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/XiaoA/sinatra_blackjack_webapp&quot;&gt;sinatra_blackjack_webapp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some of the other programs allow students to choose their own projects, and work with a mentor to complete them. That could work well for some, but while I have a lot of ideas for projects, I found it hard to choose one that would be appropriate. And worse yet, it might not allow me to learn everything I needed. The advantage of the Tealeaf way is that I know I’ll get a really good understanding, which I can use to complete my own projects with later. &lt;/p&gt;

&lt;p&gt;The capstone project of the first lesson was a procedural Blackjack game. Ruby is a great Object-Oriented language, but it is possible to build some interesting things in a procedural way. But the limitations become very clear, very quickly. When I was 11, I learned BASIC in summer school. This lesson reminded me of that. The program worked from the top to the bottom, so everything had to be neatly ordered. It is possible to use loops and conditionals to build some sophisticated flow control behavior, but it’s very brittle, and I cringed at the idea of adding a feature or making any changes, for fear of bringing the whole house of cards down.&lt;/p&gt;

&lt;p&gt;In the second lesson, we dived into Object-Oriented Programming, which allowed us to write cleaner, more efficient code. We redid the Tic-Tac-Toe and Blackjack assignments, and they were much easier to write, read, and debug.&lt;/p&gt;

&lt;p&gt;For example, in both versions, if either the player or dealer gets Blackjack or busts, the game is over, but if not, both the player and the dealer get a turn. At the end, the final card values are calculated, and the winner is declared. In the procedural version, the code to calculate a winner looks like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;  1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# ...preceding code cut for brevity...&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;  2&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;  3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;  4&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;clear&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;  5&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;  6&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;  7&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;  8&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;  9&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 10&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 11&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 12&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 13&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer busted. You win!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 14&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 15&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 16&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You won \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. You now have \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 17&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_hand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 18&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;clear&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 19&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 20&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 21&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 22&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 23&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 24&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 25&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 26&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 27&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer hit Blackjack!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 28&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 29&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 30&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You lost &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. You now have \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 31&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_hand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 32&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;clear&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 33&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 34&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 35&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 36&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 37&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 38&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 39&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 40&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 41&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer wins!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 42&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 43&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 44&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You lost &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. You now have \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 45&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 46&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;clear&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 47&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 48&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 49&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 50&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 51&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 52&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 53&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 54&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 55&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; wins!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 56&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 57&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 58&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You won \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. You now have \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 59&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_hand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 60&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;clear&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 61&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 62&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 63&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 64&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 65&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 66&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 67&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 68&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 69&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; wins!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 70&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 71&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 72&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You lost \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. You now have \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 73&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 74&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;clear&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 75&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 76&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 77&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 78&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 79&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 80&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 81&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 82&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 83&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You busted!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 84&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 85&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 86&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You lost \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. You now have \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 87&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 88&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;clear&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 89&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 90&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 91&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 92&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 93&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 94&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 95&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 96&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 97&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer wins&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 98&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 99&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You lost \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. You now have \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;101&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;clear&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;102&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;103&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;104&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;105&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;106&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;107&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;108&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;109&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;110&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;111&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;112&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;We both got &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. It&amp;#39;s a push!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;113&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;The bet will carry over to the next hand...&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;114&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;115&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;clear&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;116&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;117&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;118&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;119&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;120&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Dealer&amp;#39;s hand: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_hand&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;121&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_sum&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;122&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;123&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;124&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;We both busted. &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; loses.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;125&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;126&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You lost \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bet&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. You now have \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_cash_pot&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;127&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That’s 124 lines of code, just to calculate a winner. In the object-oriented version, most of the components of the game, including: player, dealer, hand, and game are encapsulated as Classes, with methods and modules to support the action. So instead of having to chronologically describe each outcome of the game, each game scenario has been extracted into a method in the Game class. For example, if the player wins:&lt;/p&gt;

&lt;p&gt;The player is awarded the winning pot:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calculate_player_winning_cash_pot_balance&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cash_pot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show_cash_pot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show_bet&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The player is declared a winner:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# ...preceding code cut for brevity...&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;player_high_score_message&lt;/span&gt;   
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;show_all_cards_at_end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;=&amp;gt; Congratulations, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;! You won!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You bet \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show_bet&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;7&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You now have \$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calculate_player_winning_cash_pot_balance&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that the &lt;strong&gt;calculate_player_winning_cash_pot_balance&lt;/strong&gt; method is called from within the &lt;strong&gt;player_high_score_message&lt;/strong&gt; method. There are similar methods for determining when the dealer wins, or when there is a tie, and they can be called during the game.&lt;/p&gt;

&lt;p&gt;After I’d finished the game and submitted it for review, I looked at the last lines of the OOP code, and realized that when we begin a new game, we’re actually calling a new &lt;strong&gt;Game&lt;/strong&gt; object. &lt;em&gt;In other words, the game, itself, is an object!&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Confronted with the brilliance, expressiveness, and beauty of Ruby, how could I not love this language? &lt;/p&gt;

&lt;p&gt;In the third and fourth lessons, we switched to web development, and after covering the basics of HTTP, HTML, CSS, and JavaScript, we rebuilt the Blackjack game as a Sinatra webapp, and pushed it to &lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sinatrarb.com/&quot;&gt;Sinatra&lt;/a&gt; is a great Domain-Specific Language, or &lt;a href=&quot;http://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;DSL&lt;/a&gt;, based on Ruby. I saw a lot of parallels to Ruby, and &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, which I’ve used to create this site. Sinatra has a simple syntax for specifying routes with Ruby blocks, which are outlined on Sinatra’s &lt;a href=&quot;http://www.sinatrarb.com/intro.html&quot;&gt;Getting Started&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’m planning to talk more about my Sinatra Blackjack game in a separate post, but here is what the code looks like for comparing the Player’s and Dealer’s hands:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/game/compare&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;   &lt;span class=&quot;vi&quot;&gt;@show_hit_or_stand_buttons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculate_total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculate_total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:dealer_cards&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;loser!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; stands at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, and the dealer stands at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;winner!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; stands at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, and the dealer stands at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealer_total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;tie!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Both &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:player_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; and the dealer stand at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player_total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you’d like to play the Blackjack webapp game, it’s here: &lt;a href=&quot;https://salty-crag-8411.herokuapp.com/&quot;&gt;https://salty-crag-8411.herokuapp.com/&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;final-thoughts&quot;&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;The most important thing that I’ve learned in this course is not Ruby, or how to build any of the projects that I’ve completed. What really helped was having mentors, who could help me stay focused on what is truly important. I love learning things on my own, but it’s very easy to get sidetracked, and spend too much time on side topics that won’t help me move forward. That’s why I have a scattered skillset of HTML, CSS, JS, and SQL, but have struggled to bring them together to accomplish practical goals. The head teacher, Chris, always warns us, “Don’t go sideways.” In other words, you could spend a week online, looking at the differences between &lt;a href=&quot;https://www.google.com/webhp?sourceid=chrome-instant&amp;amp;ion=1&amp;amp;espv=2&amp;amp;ie=UTF-8#q=rvm%20vs.%20rbenv&quot;&gt;RVM and RBENV&lt;/a&gt;, for example, instead of just using one of them to learn how to build applications. Being able to rely on the experience and guidance of friendly and caring instructors, to help me understand what I needed to study (and more importantly, what I could ignore for now) has made a huge difference.&lt;/p&gt;

&lt;p&gt;I enjoyed the first program, and I learned a lot. In the next course, I’ll begin working with Ruby on Rails. After the foundation that I’ve established in the first course, I’m sure it will be challenging, but not overwhelming.&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2014/10/13/The-Value-of-Practice</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2014/10/13/The-Value-of-Practice/"/>
    <title>The Value of Practice</title>
    <updated>2014-10-13T14:39:23-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;I’m working my way through the pre-course ‘&lt;a href=&quot;https://www.gotealeaf.com/books/ruby/read/flow_control#casestatement&quot;&gt;Learn Ruby&lt;/a&gt;’ online textbook at Tealeaf, and I came across a problem that I couldn’t solve without checking the answer. So after I watched the video and followed along, I created my own simple variation. It was similar to the original, but different enough to demonstrate that I’d internalized the lesson. &lt;/p&gt;

&lt;p&gt;I like writing code because it’s all about solving problems, and it can be incredibly expressive. But learning anything requires us to move just beyond our current capabilities, and apply what we know to new problems. Here is a simple example of how I did that.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;The exact details of the problem are not that interesting, but essentially, Exercise 5 asked me to rewrite an &lt;strong&gt;if/else method&lt;/strong&gt; (‘evaluate_num’), which I’d made for Exercise 3, as a &lt;strong&gt;case method&lt;/strong&gt;, using two different forms of the syntax (‘evaluate_case1_num’ and ‘evaluate_case2_num’). I had some difficulty, so I checked the solution.&lt;/p&gt;

&lt;p&gt;Here is the authors’ solution:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# evaluate_num_revisited.rb&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;evaluate_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You can&amp;#39;t enter a negative num!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is between 0 and 50&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is between 51 and 100&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is above 100&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;evaluate_case1_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You can&amp;#39;t enter a negative num!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is between 0 and 50&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is between 51 and 100&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is above 100&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;evaluate_case2_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is between 0 and 50&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is between 51 and 100&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;36&lt;/span&gt;       &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You can&amp;#39;t enter a negative num!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;38&lt;/span&gt;       &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is above 100&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;39&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;40&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;41&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;42&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;43&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Please enter a number between 0 and 100.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;44&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;gets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chomp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;45&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;46&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;evaluate_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;47&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;evaluate_case1_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;48&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;evaluate_case2_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After I saw this and watched the video, I understood what I’d been doing wrong, but I wasn’t sure if I could apply what I’d learned. So I created my own original version. It’s very similar, but instead of asking for a number, it asks the user to talk about his/her day. The feedback the user gets depends on the length of the answer.&lt;/p&gt;

&lt;p&gt;The point of doing three versions is to demonstrate three ways to solve the same problem, using both ‘if/else’ statements and ‘case’ statements. My program follows the same form, but makes a few changes. For example, in the &lt;strong&gt;string_length&lt;/strong&gt; method:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Instead of asking for a number, it lets you type in whatever you want, and it counts the number of characters in your answer. &lt;/li&gt;
  &lt;li&gt;It provides three answer options, depending on the length of your answer.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;string_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You have to give me something to work with, here.&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You&amp;#39;re not much with words, are you?&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You&amp;#39;ve got a lot to say.&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Sounds like you had quite a day!&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;If the user provides no answer, the program replies, “You have to give me something to work with here.”&lt;/li&gt;
  &lt;li&gt;If the user’s answer is 10 characters or less, the program says, “You’re not much with words, are you?”&lt;/li&gt;
  &lt;li&gt;For answers of 11 - 20 characters, the response is: “Sounds like you had quite a day!”&lt;/li&gt;
  &lt;li&gt;Answers with 21 or more characters prompt the reply, “Sounds like you had quite a day!”&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here’s the full version, with the three versions that perform the same behavior:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# I had trouble figuring out 05_flow_control/evaluate_num.rb on my own, so I created a new version for practice.&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# This program asks how your day was. The length of your answer determines the reply!&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;string_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You have to give me something to work with, here.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You&amp;#39;re not much with words, are you?&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You&amp;#39;ve got a lot to say.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Sounds like you had quite a day!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;string_length_case1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You have to give me something to work with, here.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You&amp;#39;re not much with words, are you?&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You&amp;#39;ve got a lot to say.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Sounds like you had quite a day!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;string_length_case2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You&amp;#39;re not much with words, are you?&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You&amp;#39;ve got a lot to say.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;36&lt;/span&gt;       &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;You have to give me something to work with, here.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;38&lt;/span&gt;       &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Sounds like you had quite a day!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;39&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;40&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;41&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;42&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;43&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Tell me about your day.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;44&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;gets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chomp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;45&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;46&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;47&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string_length_case1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;48&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string_length_case2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code itself is very simple. But it’s important to study good examples, and then use them as a basis for making new and more complex discoveries. &lt;em&gt;And that is how we learn!&lt;/em&gt; I was a teacher before, and I have always been interested in understanding how the mind works, and how to improve my ability to learn. One of the most influential scholars, whose theories have resonated with my own experience of learning, is the Psychologist and Learning Theorist, &lt;a href=&quot;https://en.wikipedia.org/wiki/Lev_Vygotsky&quot;&gt;Lev Vgotsky&lt;/a&gt;. He posited the idea of a “&lt;a href=&quot;https://en.wikipedia.org/wiki/Zone_of_proximal_development&quot;&gt;Zone of Proximal Development&lt;/a&gt;,” which was just beyond the current level of a student’s ability to perform learning tasks.&lt;/p&gt;

&lt;p&gt;At the risk of oversimplifying, this means that learning occurs when we move from a point where we cannot perform tasks without help, to a point where we can do them on our own (A.K.A. our Zone of Proximal Development). With the proper support (‘scaffolding’) to build this competency, I have no doubt I’ll keep learning for the rest of my life! This is just one example of how I am building my knowledge of Ruby every day. I have a lot to learn, but every day, I take another step…&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2014/08/13/Tealeaf-Academy</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2014/08/13/Tealeaf-Academy/"/>
    <title>Tealeaf Academy</title>
    <updated>2014-08-13T00:42:19-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;I’m excited to announce that I have enrolled in the Ruby on Rails online Web Developer course, offered by &lt;a href=&quot;http://gotealeaf.com&quot;&gt;Tealeaf Academy&lt;/a&gt;. I have some familiarity with Ruby on Rails, and I’ve even tried out a couple &lt;a href=&quot;https://github.com/XiaoA&quot;&gt;projects&lt;/a&gt; from Michael Hartl’s famous &lt;a href=&quot;http://www.railstutorial.org/&quot;&gt;Ruby on Rails Tutorial&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;There are a lot of good in-person coding bootcamps, but none of them are practical for me, financially or logistically, right now. There are also some good online ones, like &lt;a href=&quot;https://www.thinkful.com/&quot;&gt;Thinkful&lt;/a&gt; or &lt;a href=&quot;https://www.bloc.io/&quot;&gt;Bloc&lt;/a&gt;. Plus, there are great self-paced online coding sites, like &lt;a href=&quot;http://www.codeacademy&quot;&gt;Codeacademy&lt;/a&gt;, &lt;a href=&quot;http://teamtreehouse&quot;&gt;Treehouse&lt;/a&gt;, or &lt;a href=&quot;http://codeschool.com/&quot;&gt;Code School&lt;/a&gt;. I’ve worked through lessons on all three of these sites, and I’ve learned great things from them. I can read code, and I can create nice-looking, if basic, websites with semantic code, but I still feel like I’m missing something. Tealeaf is different. This is the first thing you see when you go to the site:&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tealeaf.jpg&quot; class=&quot;img-responsive marginTop marginBottom&quot; id=&quot;tealeaf-homepage&quot; alt=&quot;Tealeaf Homepage&quot; title=&quot;Tealeaf Homepage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;“Your Last Stop Before Becoming a Confident Developer.” That message really hit me. I know a lot about web development, but I’m honestly not confident enough to become a full-time web developer. I have been teaching myself for years, and I think I know front-end development pretty well, and I also know a decent amount about databases, but I feel like I have gaps in my knowledge. The curriculum at Tealeaf should give me the knowledge and confidence to tie everything together.&lt;/p&gt;

&lt;p&gt;The first thing that attracted me to Tealeaf was the depth and the curriculum and the quality of the projects. Looking at the people who have graduated from the other sites, I can tell many of them are talented, and they learned a lot. But there were two things that really impressed me about Tealeaf. First, I’m not sure how the future will play out in web development. Ruby on Rails, Node.js, or an entirely new paradigm could take over web development. But I doubt it will be that simple. Every day, new approaches and frameworks are being developed. This is not a field where you can learn something and expect it to stay relevant for long. You have to keep learning constantly. I love that! But that also means that it’s more important to learn how to think and solve problems as a professional coder, than to worry about which language or framework happens to be hot this year. And that is what Tealeaf emphasizes. Looking at their site and hearing the experiences of people who have gone through their program, I am confident that I will develop the knowledge and attributes to be successful, no matter what specific tools, languages, or systems I use.&lt;/p&gt;

&lt;p&gt;Another great aspect of their system is that it’s a four-month program, but they do not have a time limit. With the other schools, you pay by the month. For most of the year, my job does not infringe on my private life, but I work at a university, and we’ve just had a major software upgrade, and this time of year is always our busiest. By the time I finish my pre-course work, things should have died down again at work, and it will be smooth sailing for the rest of the year. But it’s good to know that if something does come up, I won’t be penalized. Sometimes, I learn quickly. Other times, I like to take my time and go through and really work on what I’m learning, until I know it well. With Tealeaf, I can go as fast or as slow as I need, without having to pay more. I want to learn deeply, not just rush through to meet an arbitrary time limit.&lt;/p&gt;

&lt;p&gt;“It’s time to stop messing around and take a structured approach,” their website declares. After almost 20 years of learning “a little of this, and a little of that,” I’m ready to do just that. The best part for me is that I was able to use my tax refund to pay for the lessons.&lt;/p&gt;

&lt;p&gt;I’m really excited about this new journey I am about to embark on!&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2014/08/11/Becoming-a-Web-Developer-in-Just-Twenty-Years</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2014/08/11/Becoming-a-Web-Developer-in-Just-Twenty-Years/"/>
    <title>Becoming a Web Developer in Just Twenty Years</title>
    <updated>2014-08-11T11:56:13-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;Everyone’s in a rush these days. We need immediate results. I’m not different, really. For those of us who have a dream, like becoming a web developer, we might ask, “If I study really hard, how long will it take to be competent enough to get a job?” And in fact, one of the selling points of coding bootcamps is that they can take someone with little or no knowledge, and get them ready for a job in a short time.&lt;/p&gt;

&lt;p&gt;But if anyone asks me how long it took me to become a web developer, I’ll tell them the truth. It took me 20 years. And I’m OK with that, because while the fastest way from point A to point B is a straight line, it’s usually also the least interesting.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;the-1980s-early-origins&quot;&gt;The 1980s: Early Origins&lt;/h2&gt;
&lt;p&gt;I’ve always loved computers, ever since I was a kid in the 80s, playing the original “Oregon Trail” on my uncle’s computer, or learning how to program BASIC on Apple IIe computers in summer school. Back then, in elementary school, I remember thinking about the future. I thought that one day, we would be able to turn on our TVs and see any TV show that we wanted, on demand. This was probably around 1984 or 1985, long before Netflix or Hulu. I wouldn’t have dreamed of anything like the Internet, and I certainly would never have imagined that it would become such an important part of how I would work and play.&lt;/p&gt;

&lt;h2 id=&quot;the-1990s-university-and-the-internet&quot;&gt;The 1990s: University and the Internet&lt;/h2&gt;
&lt;p&gt;Fast forward 10 years. In late 1994 or early 1995, I remember getting my first email address at my school, and trying to explain email to my family and friends. I remember some of them asking me if each mail would cost money. I told them it was all free, and there were people all around the world sharing knowledge. It was an amazing new frontier. We used Archie to search, until this new company, Yahoo! entered the scene, and I remember a magazine asking if Yahoo! and Netscape, both newcomers to the scene, would “ruin the Internet.” It seems so quaint now. As the Twentieth Century drew to a close, there was a great deal of optimism about the possibilities of the “Information Superhighway” back then. In some ways, the Internet has exceeded our greatest hopes, but it has also created problems and disappointments that we couldn’t have forseen back then. &lt;/p&gt;

&lt;p&gt;Within a couple years, I was creating my own websites. And while many people might be ashamed to admit it, I won’t lie. I thought making sites with the &amp;lt;blink&amp;gt; and &amp;lt;marquee&amp;gt; tags were cool. Soon, CSS, Javascript, and DHTML would arrive. I created my own site in the early 2000s, called nichibei.net, which was supposed to be a site about Japanese-American cultural exchange. But I had no vision of what I wanted to say, other than a desire to build a website. It was one of my many early online projects that would fizzle out.&lt;/p&gt;

&lt;h2 id=&quot;the-early-2000s-living-in-asia&quot;&gt;The early 2000s: Living in Asia&lt;/h2&gt;
&lt;p&gt;I was interested in Computer Science, but opted instead to major in Asian Studies. I learned Chinese in college, and after I graduated, Japanese. But even then, I always kept building my computer skills. I worked in the International Student Affairs Office at my university, and as I sent out multiple application packets to the same people, I realized that we needed a better way to track application requests. So I taught myself MS Access, and I designed a new application system, which tracked applicant requests, produced mailing labels and letters, and provided reports about our application statistics. Although I won multiple awards for my Chinese fluency, my first job after graduation had nothing to do with Chinese. I managed a database for a major educational skills competition.&lt;/p&gt;

&lt;p&gt;Over the next several years, I would build diverse skills that would prove useful to web development, but web development itself was something that I often thought I’d pursue as a career “someday.” In the meantime, I went to Japan in 2003, and spent over seven years there, teaching English, translating, and eventually running my own self-hosted blog, “The Wayfarer Blog&lt;sup id=&quot;fnref:archived&quot;&gt;&lt;a href=&quot;#fn:archived&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.” It was a simple blog for family and friends, but it taught me a lot. I blogged about my life in Japan, and my burgeoning interest in photography. On the technical side, I learned about MySQL and PHP. I remember that one theme I was using had CSS float issues with IE, so my pictures appeared at the bottom of the page, instead of on the side of the post. I was using a Mac, so I couldn’t test it, so I stayed up all night chatting with my sister, and I asked her to check the site while I made adjustments.&lt;/p&gt;

&lt;h2 id=&quot;and-beyond-returning-to-the-us&quot;&gt;2011 and Beyond: Returning to the U.S.&lt;/h2&gt;
&lt;p&gt;I spent February 2011, Chinese New Year, at my wife’s parent’s house, in China. We’d just left Tokyo for good, but we would swing back into Japan for a couple days to stay with some friends. For about three weeks, I studied Python. I made a few programs, including a disk cloning app. I had fun, but without a degree in Computer Science, and all of my experience with Asian languages, I assumed I’d work in some area of international student support or study abroad…or possibly international business. As it turns out, I ended up working in Educational Technology. I’m currently a Blackboard Administrator. In addition to knowing Blackboard, my job requires knowledge of the Unix command line, Oracle SQL, and I also help edit our department’s website.&lt;/p&gt;

&lt;p&gt;So I have all of these pockets of knowledge: front-end development, database design and administration, and a strong desire to learn more. But what I’ve lacked until now is a way to bring all of these elements together. Before I moved to Japan, I lived in Seattle. I went back to visit with family and friends there a few months ago. And while I was there, I met with one of my friends, who owns her own business. She told me about the problems she’s had working with web developers, who were not very knowledgeable or professional, by my standards. And I realized that I love web development, and it’s something that I’ve always been interested in, but I never had the confidence to really say, “This is it! This is what I’m going to do!” But when I heard about her struggles, I realized that I have a lot of knowledge and potential. I just need to find a way to bring all of my unique knowledge, skills, and experience together in a way that will allow me to confidentially reach out and help others. This summer, I’ve found an opportunity to do just that. I’ll be discussing that in my next post.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:archived&quot;&gt;
      &lt;p&gt;I’ve archived it &lt;a href=&quot;http://thewayfarerblog.wordpress.com/&quot;&gt;here&lt;/a&gt;. &lt;a href=&quot;#fnref:archived&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2014/08/02/Advice-to-Myself</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2014/08/02/Advice-to-Myself/"/>
    <title>Advice to Myself</title>
    <updated>2014-08-02T07:23:22-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;Have you ever had a moment where your problems seemed clear, as if you could channel all of your wisdom and experience, and teach yourself something?&lt;/p&gt;

&lt;p&gt;I had a moment like that today. Now, I wouldn’t presume to offer anyone advice about life, love, or careers, but I thought of a few things that I hope “future me” will always keep in mind. I post them here for my own benefit, as well as in the hopes that they might help someone else.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Always be true to yourself and your values.&lt;/strong&gt; Other people will come and go, but you must always live with yourself, and what you have done.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dare to dream big, but don’t miss the little things.&lt;/strong&gt; Some of the greatest pleasures in life are the moments we could easily overlook. Don’t.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Don’t chase profits, but be sure that you are developing talents and experience that will keep you employable.&lt;/strong&gt; Many long-standing industries have declined and even died in my lifetime. And just a few years ago, jobs, like “UX Experience Designer” or “Social Media Expert” did not exist! This trend will only accelerate, I’m sure. Many talented people are unable to work, so never take it for granted. You don’t want to “sell out” and only focus on money, but you also have to be realistic about what other people will pay for. Keep learning and improving, so that you can stay current with the market.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Everything you do, and everything you learn will help you (and you can use that to help others).&lt;/strong&gt; It might not be apparent now, but your entire life experience is due to the choices that you and others have made in the past. Be conscious of the needs of others, and do your best to improve the world that we live in (for the benefit of everyone alive now, as well as for everyone who is yet to come).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Don’t take it too seriously. Our lives are short on this planet.&lt;/strong&gt; Perspective can be important. Whenever I feel that I am helpless, I focus on how much power I have to change my circumstances. But sometimes, it can be useful to take a step back and realize how small I am, in the great scheme of life. I’ve been watching documentaries about astronomy and physics lately. The universe (multiverse…?) is incomprehensibly large and majestic, and we live on one small planet. Our problems and fears are large to us, but whenever I see a picture of our galaxy, I remember that I’m just one guy on one small planet, Earth. It’s easy to see ourselves as the center of the universe, but we are not. We should live our lives as fully and honestly as we can, and then let go, knowing we’ve done our best. It’s important to keep the right perspective, and maintain a positive attitude, because a life of even 100 years is over in a flash. &lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2014/07/27/Emacs-My-Editor-of-Choice</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2014/07/27/Emacs-My-Editor-of-Choice/"/>
    <title>Emacs, My Editor of Choice</title>
    <updated>2014-07-27T14:32:07-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;These days, I hear a lot about &lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;, the cool new text editor on the block. I’ve tried it, and it’s OK, but I use &lt;a href=&quot;http://www.gnu.org/software/emacs/&quot;&gt;Emacs&lt;/a&gt;, and I honestly don’t see any reason to switch. I used to use &lt;a href=&quot;http://www.vim.org&quot;&gt;Vim&lt;/a&gt;&lt;sup id=&quot;fnref:vim&quot;&gt;&lt;a href=&quot;#fn:vim&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, but I switched to Emacs back in 2010, largely because of &lt;a href=&quot;http://orgmode.org&quot;&gt;org-mode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most people I know don’t care about text editors, but if you spend any amount of time coding, you’ll definitely want to try out different editors and IDEs, to see what works best for you. And you should choose whatever tools you like, and not worry about what other people use.&lt;/p&gt;

&lt;p&gt;We’re really lucky that we live in a time when there are so many great choices. For me, there’s no contest. Emacs wins, hands down. But I understand that it’s not the right choice for everyone.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Arguments over which editor is best are tired and boring. One of my employees is just staring out in Computer Science, and I recommended that he first consider Vim or Emacs, because they are powerful, free, and they will always be around, as long as computers have keyboards. A few years ago, a lot of people I respect used TextMate. Now, many of them rave about Sublime Text. Ultimately, it doesn’t matter what tool you use. But it is a good idea to consider that the tool you use will require a lot of time and energy to learn to use well. And hopefully, you can customize it to your needs. And when it comes to customizability, no editor can match Vim or Emacs (especially Emacs!). While Sublime might be actively developed in another five or ten years, there’s no doubt in my mind that Vim and Emacs will. Plus, if he doesn’t like either of them, he can always try something else. This &lt;a href=&quot;http://en.wikipedia.org/wiki/Comparison_of_text_editors&quot;&gt;text editor comparison chart on Wikipedia&lt;/a&gt; is a great place to start.&lt;/p&gt;

&lt;p&gt;I gave him a few links to learn about Vim and Emacs. I thought I’d list them here, in case they’re helpful for anyone else.&lt;/p&gt;

&lt;h2 id=&quot;vim&quot;&gt;Vim&lt;/h2&gt;
&lt;p&gt;Download: &lt;a href=&quot;www.vim.org&quot;&gt;www.vim.org&lt;/a&gt; (try vimtutor inside vim)&lt;/p&gt;

&lt;h3 id=&quot;videos&quot;&gt;Videos&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://derekwyatt.org/&quot;&gt;http://derekwyatt.org/&lt;/a&gt;:  Funny, quirky guy, with lots of great demos and tutorial. He really knows Vim!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=MGmIJyTf8pg&quot;&gt;https://www.youtube.com/watch?v=MGmIJyTf8pg&lt;/a&gt;: Tim Pope has made a lot of good plugins&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=p6K4iIMlouI&quot;&gt;https://www.youtube.com/watch?v=p6K4iIMlouI&lt;/a&gt;: Great talk about efficient text editing, by the guy who ported the old Vi editor to Vim.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;blog-article&quot;&gt;Blog Article&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://csswizardry.com/2014/06/vim-for-people-who-think-things-like-vim-are-weird-and-hard/&quot;&gt;http://csswizardry.com/2014/06/vim-for-people-who-think-things-like-vim-are-weird-and-hard/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;emacs&quot;&gt;Emacs&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Download: &lt;a href=&quot;http://www.gnu.org/software/emacs/&quot;&gt;http://www.gnu.org/software/emacs/&lt;/a&gt; (try the tutorial inside emacs)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.gnu.org/doc/doc.html&quot;&gt;http://www.gnu.org/doc/doc.html&lt;/a&gt; emacs help (also in emacs itself)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.emacswiki.org/emacs/&quot;&gt;http://www.emacswiki.org/emacs/&lt;/a&gt; probably the best place to go for emacs help, other than in the emacs help docs&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;videos-1&quot;&gt;Videos&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://emacsrocks.com/&quot;&gt;http://emacsrocks.com/&lt;/a&gt; A really, really enthusiastic emacs user. These are short videos that show his little discoveries and customizations. He’s put out several good packages, like &lt;a href=&quot;https://github.com/magnars/multiple-cursors.el&quot;&gt;multiple cursors&lt;/a&gt;, which is an Emacs equivalent to one of the most popular Sublime Text features.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/user/rpdillon&quot;&gt;https://www.youtube.com/user/rpdillon&lt;/a&gt; These are good intro videos.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://orgmode.org&quot;&gt;http://orgmode.org&lt;/a&gt; Many people convert to Emacs just for this. I did.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://vimeo.com/timvisher/videos&quot;&gt;http://vimeo.com/timvisher/videos&lt;/a&gt; There’s something called Vimgolf, where Vim Users try to do tasks with as few keystrokes as possible. This guy uses Emacs, and he does the same challenges in Emacs. More for learning new features and inspiration than a tutorial for new users. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a few starter kits for Emacs, which set more “sensible” defaults for new Emacs users. I’ve used some of these in the past. I especially like &lt;a href=&quot;https://github.com/bbatsov/prelude&quot;&gt;Prelude&lt;/a&gt;. But after a while, I found it was easier to start over, and either create or “borrow” what I needed. The Emacs community is very friendly and generous. If you have a problem or need help, and can’t find an answer within the extensive documentation built into Emacs, check the links I’ve provided above, or do a quick Google search. The chances are, you’ll find at least one solution to your problem, if not several.&lt;/p&gt;

&lt;p&gt;Here’s a link to my ever-changing Emacs configuration files: &lt;a href=&quot;https://github.com/XiaoA/.emacs.d&quot;&gt;https://github.com/XiaoA/.emacs.d&lt;/a&gt;. If you have a question or problem, let me know. Maybe I’ll be able to help.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:vim&quot;&gt;
      &lt;p&gt;In fact, I still use it at work, when I log in to the linux servers. Vi/Vim should always be installed on any *nix server, so it’s always good to know how to get around. With just a few memorized commands, you can edit effectively in Vim. &lt;a href=&quot;#fnref:vim&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2014/07/21/Douglas-Crockford-JS-Videos</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2014/07/21/Douglas-Crockford-JS-Videos/"/>
    <title>Douglas Crockford JS Videos</title>
    <updated>2014-07-21T01:57:43-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;This summer, I’ve been watching these &lt;a href=&quot;http://yuiblog.com/crockford/&quot;&gt;lectures on Javascript&lt;/a&gt; by Douglas Crockford. Do yourself a favor, and check them out. Seriously. I learned a lot about the history and design of computers and programming languages, how the fight or flight response influences computer programming, and how Javascript fits in with all of this.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.crockford.com/&quot;&gt;Crockford&lt;/a&gt; is the author of &lt;a href=&quot;http://www.amazon.com/exec/obidos/ASIN/0596517742/wrrrldwideweb&quot;&gt;Javascript: The Good Parts&lt;/a&gt;, a book I’ve heard a lot of good things about, but haven’t read yet.&lt;/p&gt;

&lt;p&gt;It’s on my list.&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2014/07/18/Ruby-Monk</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2014/07/18/Ruby-Monk/"/>
    <title>Ruby Monk</title>
    <updated>2014-07-18T01:42:11-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;I’d glanced at &lt;a href=&quot;https://rubymonk.com&quot;&gt;Ruby Monk&lt;/a&gt; before, but I’d never actually gone through any of the lessons before today. It’s really fun and useful.&lt;/p&gt;

&lt;p&gt;The genius of the site is in the interactive feedback you get from the “Master.” As you progress though the lessons, you can type in code in the embedded command line, and run it. With each exercise, you’re greeted with fun feedback, which runs the gambit of references to a book of Zen Koans, The Matrix, and more than a few Mr. Miyagi quotes.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Because the feedback amused me, and I wanted to get just one more “compliment” from the Master, I was motivated to answer just one more question, even though I was really tired.&lt;/p&gt;

&lt;p&gt;Some of my favorite sayings included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“You have made your brothers proud.”&lt;/li&gt;
  &lt;li&gt;“Would you like to learn Kung Fu?&lt;/li&gt;
  &lt;li&gt;What goes on inside your head I do not always understand. But what goes on in your heart will never let us down.”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, I also got some wrong answers, but I’d rather not relive the trauma of letting the Master (and my brothers…?) down.&lt;/p&gt;

&lt;p&gt;Learning should always be this fun.&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2014/07/16/Ruby-Blocks-Epiphany</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2014/07/16/Ruby-Blocks-Epiphany/"/>
    <title>Ruby Blocks Epiphany</title>
    <updated>2014-07-16T02:32:11-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;Rob Sobers, author of &lt;a href=&quot;http://ruby.learncodethehardway.org&quot;&gt;Learn Ruby the Hard Way&lt;/a&gt;, outlines some very interesting discoveries about Ruby blocks:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Here was the major realization I had about blocks: without understanding the inner-workings of the method I’m passing a block to, I can’t really write my block.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;blockquote&gt;
  &lt;p&gt;I couldn’t treat it as a black box, as badly as I wanted to. With many methods (or APIs), I can simply pass in arguments and get a return value without ever having to understand what actually goes on inside. And that encapsulation is a beautiful thing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;But with blocks, I am actively participating in writing the method I’m calling, so I have to understand the context in which my code is called. I also have to understand the objects that are yielded to my block via its arguments.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Check it out &lt;a href=&quot;http://robsobers.com/struggle-ruby-block/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What struck me about this is that Ruby blocks looked simple to me at first; more or less like anonymous functions in Javascript. Ruby syntax is often described as “simple” or “good for beginners,” and I think that is an element of truth to that.&lt;/p&gt;

&lt;p&gt;I wouldn’t call myself an expert in Javascript, but I have been using it for years, and because of that, I felt comfortable with Ruby when I started learning it. Like Javascript, Ruby treats everything as an object. And many of the methods and concepts are familiar. But there is also a level of subtlety and depth to Ruby that intrigues me. I have a lot to learn, but that excites me!&lt;/p&gt;

&lt;p&gt;It’s like that with anything you choose to learn. If you look at all of the things you have to learn, it can be overwhelming. At first, when you know nothing, it’s easy to see improvements, but there inevitable peaks and valleys throughout the learning process. Sometimes, it seems like you’re actually getting worse! I’m lucky, because of my experience learning two Asian languages. I had people tell me I couldn’t do it, and sometimes, I might have believed them, but for the belief that with regular practice and determination, there’s almost no limit to what I can learn. It’s that spirit of optimism and self-confidence that continues to invigorate me and push me on to tackle new challenges.&lt;/p&gt;

&lt;p&gt;As long as I am alive, I never want to stop learning and improving. And that is why I am so drawn to this field. You simply cannot stand still, or you’ll fall behind.&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <id>http://andrewbuckingham.net/blog/blog/2014/07/15/Hello-World-Again</id>
    <link type="text/html" rel="alternate" href="http://andrewbuckingham.net/blog/blog/2014/07/15/Hello-Again-World/"/>
    <title>Hello Again, World!</title>
    <updated>2014-07-15T11:34:51-07:00</updated>
    <author>
      <name>Andrew Buckingham</name>
      <uri>http://andrewbuckingham.net/blog</uri>
    </author>
    <content type="html">&lt;p&gt;After four years without a blog, I’m back at it again, with a new blog and a new purpose.&lt;/p&gt;

&lt;p&gt;I’ve created a few blogs and websites in the past. My longest-running blog was “The Wayfarer Blog,” a self-hosted WordPress blog that detailed my daily experiences as an expat in Japan. I shared my experiences living abroad, as I struggled to improve my Japanese and Chinese; as time went on, my passion for photography and technology played an increasingly important part, as well. I’ve archived it here: &lt;a href=&quot;http://thewayfarerblog.wordpress.com/&quot;&gt;http://thewayfarerblog.wordpress.com/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This blog will explore my interest in web development. Although I am not a full-time developer (yet!), I have been building websites for myself and others, since 1995 or 1996. It’s something I’ve been passionate about for a long time, and I want to take this to next level. I have a lot to learn, and I’m really excited to share it here!&lt;/p&gt;
</content>
  </entry>
  
 
</feed>
